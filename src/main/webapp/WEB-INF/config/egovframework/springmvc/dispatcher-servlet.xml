<?xml version="1.0" encoding="UTF-8"?>
<!--
    - DispatcherServlet application context for Application's web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
    <!--
    <annotation-driven />
        - The controllers are autodetected POJOs labeled with the @Controller annotation.        
    -->
    <context:component-scan base-package="egovframework" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>



	<!-- Integrated Apache Commons Validator by Spring Modules -->
	
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
   		<property name="order" value="0"/>
		<property name="mappings">
			<props>
                <prop key="/com/validator.do">urlFilenameViewController</prop>
			</props>
		</property>
	</bean>
	
	<bean id="urlFilenameViewController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
	
	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean> 
	
	  <!--
        - The form-based controllers within this application provide @RequestMapping 
        - annotations at the type level for path mapping URLs and @RequestMapping 
        - at the method level for request type mappings (e.g., GET and POST). 
        - In contrast, ClinicController - which is not form-based - provides 
        - @RequestMapping only at the method level for path mapping URLs.
        -
        - DefaultAnnotationHandlerMapping is driven by these annotations and is 
        - enabled by default with Java 5+.
    -->
      <!--
        - This bean processes annotated handler methods, applying Application-specific PropertyEditors
        - for request parameter binding. It overrides the default AnnotationMethodHandlerAdapter.
     -->
    
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
<!--     	<property name="alwaysUseFullPath" value="true"/> -->
    	<property name="order" value="1"/>
    </bean>
    
    <!--
        - This bean resolves specific types of exceptions to corresponding logical 
        - view names for error views. The default behaviour of DispatcherServlet 
        - is to propagate all exceptions to the servlet container: this will happen 
        - here with all other types of exceptions.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="/cmmn/bizError"/>
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.dao.DataAccessException">/cmmn/dataAccessFailure</prop>
                <prop key="org.springframework.transaction.TransactionException">/cmmn/transactionFailure</prop>
                <prop key="egovframework.rte.fdl.cmmn.exception.EgovBizException">/cmmn/bizError</prop>
            </props>
        </property>
    </bean>
    
    <!--
        - This bean configures the 'prefix' and 'suffix' properties of 
        - InternalResourceViewResolver, which resolves logical view names 
        - returned by Controllers. For example, a logical view name of "vets" 
        - will be mapped to "/WEB-INF/jsp/vets.jsp".
    -->
<!--      p:order="1" -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
    p:viewClass="org.springframework.web.servlet.view.JstlView" 
    p:prefix="/WEB-INF/jsp/egovframework/rte/tex/" p:suffix=".jsp"/>

    <!--
        - Message source for this context, loaded from localized "messages_xx" files.
        - Could also reside in the root application context, as it is generic,
        - but is currently just used within Application's web tier.
    -->
    <!-- Message : SessionLocaleResolver -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
      <property name="basenames">
        <list>
         <!-- value>classpath:/egovframework/message/message-common</value -->
         <value>egovframework/message/message-common</value>         
        </list>
      </property>
  </bean>
  
  
  <!-- 국제화 기능 -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	 
    
    <!-- For Pagination Tag -->
    <bean id="imageRenderer" class="egovframework.rte.tex.com.web.EgovImgPaginationRenderer"/>

    <bean id="paginationManager" class="egovframework.rte.ptl.mvc.tags.ui.pagination.DefaultPaginationManager">
        <property name="rendererType">
            <map>
                <entry key="image" value-ref="imageRenderer"/> 
            </map>
        </property>
    </bean>
	<!-- /For Pagination Tag -->
	
	<!--  excel start -->
	<bean id="goodsExcelView" class="egovframework.rte.tex.com.web.EgovExcel" />
	<!--  excel end -->
	
	<!-- Ajax Json View Start -->
	<bean name="ajaxMainView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" >
		<property name="contentType" value="text/html; charset=UTF-8" />
	</bean>
	<!-- Ajax Json View End -->
   
</beans>